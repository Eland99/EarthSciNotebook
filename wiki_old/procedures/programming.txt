====== Data analysis programming: general info =====
This page collects info and links (to this site or others) useful in data analysis programming, including resources for various languages, editors, or testing tools, and notes/tips for using them effectively.

===== General techniques and conventions =====
Notes about data analysis techniques/conventions, independent of language/interface.
  * [[procedures:functiontesting|Function testing]] - Writing and running tests for data analysis functions/scripts.
  * [[sensordata_tips|Sensor data tips]] - collected notes on working with continuous sensor timeseries (from dataloggers, SNOTEL sites, etc.)
  * [[data_analysis_workflow|Data analysis workflow]] - Greg's notes on collecting, storing, and moving data through the analysis process.

===== Text editing and data file handling =====
**[[http://www.moolenaar.net/vim.html|VIM]] is a great text editor**. Below are a few resources on using it effectively.
  * A fairly complete [[http://bullium.com/support/vim.html|Vim commands cheatsheet]].
  * [[http://vim.wikia.com/wiki/Vim_Tips_Wiki|The Vim tips wiki]]
  * [[http://www.moolenaar.net/habits.html|Seven Habits]] for effective text editing.

**An excellent general overview of text/data file handling** in a Unix environment is provided by Unix for Poets, by Kenneth Ward Church. PDFs of this are all over the internet.

**Other useful resources (including some on this wiki):**
  * [[procedures:textfiles|Textfile tips]] - various command-line ways of manipulating text.
  * [[procedures:shellscripts|Shell scripting tips]], including Unix shell scripts and useful utilities.
    * [[http://wiki.bash-hackers.org/doku.php|BASH hackers site]] is helpful.
    * [[http://www.vectorsite.net/tsshell.html|Shell scripting tutorial]] by Greg Goebel/Public Domain
  * [[procedures:vimtips|Vim tips]] - tips for using the Vim editor.
  * sed is a text stream editor great for pattern matching and replacing
    * See [[http://www.grymoire.com/Unix/Sed.html|this tutorial]]
    * [[http://sed.sourceforge.net/sed1line.txt|This page]] gives great one-line examples.
  * [[procedures:awk|Awk]] is also very useful for manipulating text files.
    * [[http://awk.info/|The awk gateway]]
    * [[http://www.catonmat.net/blog/awk-one-liners-explained-part-one/|Awk one-liners explained part one]]
    * [[http://www.catonmat.net/blog/awk-one-liners-explained-part-two/|Awk one-liners explained part two]]
    * [[http://www.vectorsite.net/tsawk_1.html|Awk tutorial]] by Greg Goebel/Public Domain

===== Python =====
Python is a high-level, open-source programming language that, when combined with some numerical, scientific, and plotting packages, makes a very powerful tool for scientific computing and data analysis (on par with Matlab). Useful Python extensions for scientific computing are:
  - [[http://numpy.scipy.org/|NumPy]] - provides n-dimensional array objects and other useful numeric extensions to Python
  - [[http://www.scipy.org/|SciPy]] - provides a number of high-level mathematical tools for use in scientific computing (integration, optimization, fourier transforms...etc)
  - [[http://matplotlib.sourceforge.net/|Matplotlib]] - a plotting library that provides publication quality plots and plotting routines that are similar to Matlab's.
  - [[http://ipython.org/|IPython]] - an interactive shell that is designed to work well with NumPy, SciPy, and Matplotlib.
  - [[http://scikits.appspot.com/scikits|SciKits]] - add on toolkits that complement SciPy (various statistical models, timeseries analysis, machine-learning, image processing, etc.)
  - The [[http://pandas.pydata.org/|pandas library]] - provides high-performance, easy-to-use data structures (like data frames) and data analysis tools that sit on top of NumPy. 

==== Resources ====
  * [[http://www.python.org/doc/|Official links]] to Python documentation, including tutorials HowTo's and these:
    * [[http://docs.python.org/reference/|Python Language Reference]] - describing the syntax and core semantics of the language.
    * [[http://docs.python.org/library/|Python Standard Library]] - describing the standard library (modules, functions, etc) distributed with Python.
  * Coding in python should follow the [[http://www.python.org/dev/peps/pep-0008/|Python Style Guide]].
  * [[http://docs.scipy.org/doc/|Official documentation]] for NumPy/SciPy, and [[http://www.scipy.org/Additional_Documentation|additional documentation]] (tutorials, etc.)
  * [[http://matplotlib.sourceforge.net/api/pyplot_api.html|PyPlot documentation]] for the Matlab-like plotting framework in matplotlib.
  * [[http://wiki.python.org/moin/Vim|The Python Wiki Vim page]] and [[http://dancingpenguinsoflight.com/2009/02/python-and-vim-make-your-own-ide/|this blog entry]] give some interesting tips about using vim as a python source editor.
  * [[http://code.google.com/p/spyderlib/|Spyder]] is a MATLAB-like IDE for python (Numpy and Matplotlib enabled) that could be an alternative to VIM/[[procedures:ipython|IPython]])

**Python (and its scientific extensions) have a large user/developer community supporting them. These are some forums that might be helpful:**
  * http://www.scipy.org/Mailing_Lists
  * http://old.nabble.com/Scipy-User-f33045.html

==== Notes ====
Collected notes, tips, and tricks for using any of the Python tools above.
  * [[http://pypi.python.org/pypi|Python package index]] - an index of many add-on tools discussed in this wiki. Installing them is covered [[procedures:pythontips|here]].
  * [[procedures:ipython|Ipython]] - notes on using IPython.
  * [[procedures:pythontips|Python tips]] on debugging, code structure, and other aspects of Python development.
  * [[procedures:numpytips|NumPy tips]] - Various notes on using the NumPy package.

===== MATLAB (and clones) =====
[[http://www.mathworks.com/products/matlab/|MATLAB]] is a proprietary programming language and IDE that is widely used in scientific and engineering computing.

==== Resources ====
  * [[http://www.mathworks.com/help/techdoc/|Official MathWorks documentation]]
  * [[http://www.mathworks.com/help/techdoc/ref/f16-6011.html|Function reference]]
  * [[http://www.mathworks.com/matlabcentral/|MATLAB Central]] - the official user/developer community, including a [[http://www.mathworks.com/matlabcentral/fileexchange/|file exchange]].
  * [[http://www.kluid.com/mlib/index.php|Kluid forums]] has matlab and octave forums.

====Clones of Matlab====
There are a bunch of free/open-source clones of Matlab that have various levels of syntax compatibility.

  * [[http://www.gnu.org/software/octave/|GNU Octave]] - generally very compatible with Matlab, though some functions are missing.
  * [[http://www.scilab.org/|SciLab]]
  * [[http://freemat.sourceforge.net/|FreeMat]]

====Notes====
  * [[matlabtips|Tips and tricks for using Matlab]]

===== R =====
R is a free, open-source software environment for statistical computing and graphics.
  * [[http://www.r-project.org/index.html|R-project homepage]]
  * [[http://cran.r-project.org/manuals.html|R manuals]]
  * [[http://rwiki.sciviews.org/doku.php|R wiki]]
====Notes====
  * [[rtips|Tips and tricks for using R]]
  * [[https://github.com/yihui/knitr#readme|knitr]] - a nice report generating engine for R

===== Math and Stats tools=====
Many toolboxes are available, either standalone or in Python, R, and Matlab, for math and statistical applications. See the math [[math:toolboxes]] page.
